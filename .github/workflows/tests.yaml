name: tests

on:
  pull_request:
  push:
    branches:
    - master

jobs:
  tests:
    runs-on: ubuntu-22.04
    env:
      PG: ${{ matrix.postgres-version }}
    strategy:
      fail-fast: false
      matrix:
        postgres-version:
        - '9.6'
        - '10'
        - '11'
        - '12'
        - '13'
        - '14'
        - '15'
        - '16'
        - '17'

    steps:
    - uses: actions/checkout@v2
    - name: Set up packages
      run: |
        set -e

        # add the official Ubuntu/Debian APT repository for PostgreSQL
        sudo sh -c "echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main $PG\" > /etc/apt/sources.list.d/pgdg.list"
        curl -Ls https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update

        sudo apt-get install --assume-yes --quiet --no-install-suggests --no-install-recommends curl postgresql-common lcov libkrb5-dev

        # forbid creation of a "main" cluster when a new postgresql-x.y server package is installed
        sudo sed -ri 's/#(create_main_cluster) .*$/\1 = false/' /etc/postgresql-common/createcluster.conf

        sudo apt-get --assume-yes --quiet --no-install-suggests --no-install-recommends install postgresql-$PG postgresql-server-dev-$PG

    - name: Compile and install pg_auth_mon
      run: |
        set -e

        # utilities like pg_config are version-dependent, so we explicitly specify
        # the correct path to avoid potential errors 
        export PATH=/usr/lib/postgresql/$PG/bin:$PATH

        sudo PATH=$PATH make USE_PGXS=1 ENABLE_GCOV=1 install
        sudo PATH=$PATH make USE_PGXS=1 ENABLE_GCOV=1 with_llvm=no clean all install

    - name: Run tests
      run: ./test.sh "${PG}"

    - name: Generate lcov.info
      run: |
        gcov -lr *.[ch]
        lcov --capture --directory . --no-external -o lcov.info

    - name: Coveralls Parallel
      uses: coverallsapp/github-action@master
      with:
        path-to-lcov: lcov.info
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: ${{ matrix.postgres-version }}
        parallel: true

  finish:
    needs: tests
    runs-on: ubuntu-22.04
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
