create role auth_super with superuser login password 'postgres';
create role auth_nologin with password 'postgres';
create role auth_test with login password 'wrongpassword';
create role auth_to_be_deleted with login password 'foobar';
create database testdb;
create extension pg_auth_mon;
--1.Successful Login attempt
\! PGPASSWORD=postgres psql -X -U auth_super -d testdb -c "select 1"
 ?column? 
----------
        1
(1 row)

select rolname, successful_attempts, total_hba_conflicts, other_auth_failures from pg_auth_mon where rolname like 'auth_%';
  rolname   | successful_attempts | total_hba_conflicts | other_auth_failures 
------------+---------------------+---------------------+---------------------
 auth_super |                   1 |                   0 |                   0
(1 row)

--2.Login attempt by invalid username
\! PGPASSWORD=postgres psql -X -U auth_blah -d testdb  -c "select 1" 2>&1 | sed 's/^.* FATAL: */FATAL: /'
FATAL: password authentication failed for user "auth_blah"
select rolname, uid, successful_attempts, total_hba_conflicts, other_auth_failures from pg_auth_mon where uid = 0;
 rolname | uid | successful_attempts | total_hba_conflicts | other_auth_failures 
---------+-----+---------------------+---------------------+---------------------
         |   0 |                   0 |                   0 |                   1
(1 row)

--3.Login attempt by username who is not allowed to login is not authentication failure
\! PGPASSWORD=postgres psql -X -U auth_nologin -d testdb -c "select 1" 2>&1 | sed 's/^.* FATAL: */FATAL: /'
FATAL: role "auth_nologin" is not permitted to log in
select rolname, successful_attempts, total_hba_conflicts, other_auth_failures from pg_auth_mon where rolname like 'auth_%';
   rolname    | successful_attempts | total_hba_conflicts | other_auth_failures 
--------------+---------------------+---------------------+---------------------
 auth_nologin |                   1 |                   0 |                   0
 auth_super   |                   1 |                   0 |                   0
(2 rows)

--4.Login attempt by a valid user with a wrong password 
\! PGPASSWORD=postgres psql -X -U auth_test -d testdb -c "select 1" 2>&1 | sed 's/^.* FATAL: */FATAL: /'
FATAL: password authentication failed for user "auth_test"
select rolname, successful_attempts, total_hba_conflicts, other_auth_failures from pg_auth_mon where rolname like 'auth_%' order by rolname;
   rolname    | successful_attempts | total_hba_conflicts | other_auth_failures 
--------------+---------------------+---------------------+---------------------
 auth_nologin |                   1 |                   0 |                   0
 auth_super   |                   1 |                   0 |                   0
 auth_test    |                   0 |                   0 |                   1
(3 rows)

--5. Rolname is not empty for deleted users
\! PGPASSWORD=foobar psql -X -U auth_to_be_deleted -d testdb -c "select 1"
 ?column? 
----------
        1
(1 row)
drop role auth_to_be_deleted;
select rolname, successful_attempts, total_hba_conflicts, other_auth_failures from pg_auth_mon where rolname like 'auth_%' order by rolname;
   rolname          | successful_attempts | total_hba_conflicts | other_auth_failures 
--------------------+---------------------+---------------------+---------------------
 auth_nologin       |                   1 |                   0 |                   0
 auth_super         |                   1 |                   0 |                   0
 auth_test          |                   0 |                   0 |                   1
 auth_to_be_deleted |                   1 |                   0 |                   0
(3 rows)

--Cleanup
drop role auth_nologin;
drop role auth_test;
drop role auth_super;

drop database testdb;